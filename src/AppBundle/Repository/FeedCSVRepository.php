<?php

namespace AppBundle\Repository;

use AppBundle\Entity\FeedCSV;
use Doctrine\ORM\EntityRepository;

/**
 * FeedCSVRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FeedCSVRepository extends EntityRepository
{
    public function retrieveNextCsvFeed($source, $locale)
    {
        $query = $this->_em->createQuery(
            "
                SELECT
                  s
                FROM AppBundle\Entity\FeedCSV s
                WHERE s.source = :source
                AND s.flagbatched = 'N'
                AND s.active = 'Y'
                AND s.locale = :locale
            "
        );

        $query->setParameter('locale', $locale);
        $query->setParameter('source', strtoupper($source));
        $query->setMaxResults(1);
        $query->setFirstResult(0);
        $results = $query->getResult();

        return $results[0];
    }

    public function getFeedsToProcess($source, $locale){

        $feedsToProcess = $this->findBy(
            array(
                'locale' => $locale,
                'source' => $source,
                'flagbatched' => 'N',
                'active' => 'Y'
            )
        );

        return $feedsToProcess;
    }

    public function getActiveFeeds($source, $locale){

        $feedsToProcess = $this->findBy(
            array(
                'locale' => $locale,
                'source' => $source,
                'active' => 'Y'
            )
        );
        return $feedsToProcess;
    }

    public function getInactiveFeeds($source, $locale){

        $feedsToProcess = $this->findBy(
            array(
                'locale' => $locale,
                'source' => $source,
                'active' => 'N'
            )
        );
        return $feedsToProcess;
    }

    public function getToPut($id){
        $query = $this->_em->createQuery(
            "
                SELECT
                  s
                FROM AppBundle\Entity\FeedCSV s
                WHERE s.id = :id
            "
        );

        $query->setParameter('id', $id);
        $results = $query->getArrayResult();
    }

    /**
     * Persists type to database if it doesn't exist in database.
     * If the type is already persisted (has id), it is updated (merged).
     *
     * @param $feed
     * @return $feed
     */
    public function persistType(FeedCSV $feed) {
        if ($feed->getId() !== NULL) {
            $feed = $this->_em->merge($feed);
        } else {
            $this->_em->persist($feed);
        }
        $this->_em->flush();
        return $feed;
    }


    
}
